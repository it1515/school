/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package weaponeditor;

import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;

/**
 *
 * @author nesty
 */
public class WeaponDialog extends javax.swing.JDialog {
    private MeleeWeapon meleeweapon;
    private RangeWeapon rangeweapon;
    private String actionButton = "Storno";
    private boolean Melee = false;
    /**
     * Creates new form WeaponDialog
     */
    public WeaponDialog(java.awt.Frame parent, boolean modal, MeleeWeapon weapon) {
        super(parent, modal);
        initComponents();
        this.meleeweapon = weapon;
        Melee = true;
        name.setText(weapon.getName());
        dmg.setValue(weapon.getDmg());
        attackspeed.setValue(weapon.getAttackspeed());
        selectWeapon.removeAllItems();
        selectWeapon.setModel(new DefaultComboBoxModel(MeleeWeapon.Type.values()));
        selectWeapon.setSelectedItem(weapon.getType());
        range.setValue(weapon.getRange());
        durability.setValue(weapon.getDurability());
        selectRarity.removeAllItems();
        selectRarity.setModel(new DefaultComboBoxModel(Weapon.Rarity.values()));
        selectRarity.setSelectedItem(weapon.getRarity());
        lenght.setValue(weapon.getLength());
        accuracy.setVisible(false);
        stability.setVisible(false);
        ammoCapacity.setVisible(false);
        magazineCapacity.setVisible(false);
        jLabel9.setVisible(false);
        jLabel10.setVisible(false);
        jLabel11.setVisible(false);
        jLabel12.setVisible(false);   
        image.setBounds(0,0,0,0);
        imageRarity.setBounds(0,0,0,0);
    }
    
    public WeaponDialog(java.awt.Frame parent, boolean modal, RangeWeapon weapon) {
        super(parent, modal);
        initComponents();
        this.rangeweapon = weapon;
        name.setText(weapon.getName());
        dmg.setValue(weapon.getDmg());
        attackspeed.setValue(weapon.getAttackspeed());
        selectWeapon.removeAllItems();
        selectWeapon.setModel(new DefaultComboBoxModel(RangeWeapon.Type.values()));
        selectWeapon.setSelectedItem(weapon.getType());  
        range.setValue(weapon.getRange());
        durability.setValue(weapon.getDurability());
        selectRarity.removeAllItems();
        selectRarity.setModel(new DefaultComboBoxModel(Weapon.Rarity.values()));
        selectRarity.setSelectedItem(weapon.getRarity());
        accuracy.setValue(weapon.getAccuracy());
        stability.setValue(weapon.getStability());
        ammoCapacity.setValue(weapon.getAmmoCapacity());
        magazineCapacity.setValue(weapon.getMagazineCapacity());
        lenght.setVisible(false);
        jLabel8.setVisible(false);
        image.setBounds(0,0,0,0);
        imageRarity.setBounds(0,0,0,0);
    }
    
    public String showDialog(String weapon) {
        weaponLabel.setText(weapon);
        this.setVisible(true);
        return actionButton;
    }
    
    public MeleeWeapon getMeleeWeapon(){
        this.meleeweapon.setName(name.getText());
        this.meleeweapon.setDmg((int)dmg.getValue());
        this.meleeweapon.setAttackspeed((int)attackspeed.getValue());
        this.meleeweapon.setType((MeleeWeapon.Type) selectWeapon.getSelectedItem());
        this.meleeweapon.setRange((int)range.getValue());
        this.meleeweapon.setDurability((int)durability.getValue());
        this.meleeweapon.setRarity((Weapon.Rarity) selectRarity.getSelectedItem());
        this.meleeweapon.setLength((int)lenght.getValue());
        return this.meleeweapon;
    }
    
    public RangeWeapon getRangeWeapon(){
        this.rangeweapon.setName(name.getText());
        this.rangeweapon.setDmg((int)dmg.getValue());
        this.rangeweapon.setAttackspeed((int)attackspeed.getValue());
        this.rangeweapon.setType((RangeWeapon.Type) selectWeapon.getSelectedItem());
        this.rangeweapon.setRange((int)range.getValue());
        this.rangeweapon.setDurability((int)durability.getValue());
        this.rangeweapon.setRarity((Weapon.Rarity) selectRarity.getSelectedItem());
        this.rangeweapon.setAccuracy((int)accuracy.getValue());
        this.rangeweapon.setStability((int)stability.getValue());
        this.rangeweapon.setAmmoCapacity((int)ammoCapacity.getValue());
        this.rangeweapon.setMagazineCapacity((int)magazineCapacity.getValue()); 
        return this.rangeweapon;
    }
    
    private void setSlider(javax.swing.JSlider name, int min,int max,int space){
        name.setMinimum(min);
        name.setMaximum(max);
        name.setMajorTickSpacing(space);
        name.setPaintTicks(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        name = new javax.swing.JTextField();
        OKButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        dmg = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        weaponLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        selectWeapon = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        range = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();
        attackspeed = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        durability = new javax.swing.JSlider();
        selectRarity = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lenght = new javax.swing.JSlider();
        jLabel9 = new javax.swing.JLabel();
        accuracy = new javax.swing.JSlider();
        stability = new javax.swing.JSlider();
        jLabel10 = new javax.swing.JLabel();
        ammoCapacity = new javax.swing.JSlider();
        jLabel11 = new javax.swing.JLabel();
        magazineCapacity = new javax.swing.JSlider();
        jLabel12 = new javax.swing.JLabel();
        panel = new javax.swing.JPanel();
        image = new javax.swing.JLabel();
        imageRarity = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        OKButton.setText("OK");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        CancelButton.setText("Storno");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("nazev");

        jLabel2.setText("dmg");

        weaponLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        weaponLabel.setText("Melee Weapon");

        jLabel3.setText("speed");

        selectWeapon.setModel(new DefaultComboBoxModel(MeleeWeapon.Type.values()));
        selectWeapon.setSelectedItem(MeleeWeapon.Type.Sword);
        selectWeapon.setAutoscrolls(true);
        selectWeapon.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                selectWeaponComponentAdded(evt);
            }
        });
        selectWeapon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectWeaponActionPerformed(evt);
            }
        });

        jLabel4.setText("typ");

        range.setFont(new java.awt.Font("Tahoma", 0, 7)); // NOI18N
        range.setMajorTickSpacing(10);
        range.setMinorTickSpacing(5);
        range.setPaintLabels(true);
        range.setPaintTicks(true);
        range.setValue(0);

        jLabel5.setText("range");

        jLabel6.setText("durability");

        durability.setFont(new java.awt.Font("Tahoma", 0, 7)); // NOI18N
        durability.setMajorTickSpacing(10);
        durability.setMinorTickSpacing(5);
        durability.setPaintLabels(true);
        durability.setPaintTicks(true);
        durability.setValue(0);

        selectRarity.setModel(new DefaultComboBoxModel(MeleeWeapon.Type.values()));
        selectRarity.setSelectedItem(MeleeWeapon.Type.Sword);
        selectRarity.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                selectRarityComponentAdded(evt);
            }
        });
        selectRarity.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                selectRarityItemStateChanged(evt);
            }
        });
        selectRarity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectRarityActionPerformed(evt);
            }
        });

        jLabel7.setText("vzacnost");

        jLabel8.setText("lenght");

        lenght.setFont(new java.awt.Font("Tahoma", 0, 7)); // NOI18N
        lenght.setMajorTickSpacing(10);
        lenght.setMinorTickSpacing(5);
        lenght.setPaintLabels(true);
        lenght.setPaintTicks(true);
        lenght.setValue(0);

        jLabel9.setText("accuracy");

        accuracy.setFont(new java.awt.Font("Tahoma", 0, 7)); // NOI18N
        accuracy.setMajorTickSpacing(10);
        accuracy.setMinorTickSpacing(5);
        accuracy.setPaintLabels(true);
        accuracy.setPaintTicks(true);
        accuracy.setValue(0);

        stability.setFont(new java.awt.Font("Tahoma", 0, 7)); // NOI18N
        stability.setMajorTickSpacing(10);
        stability.setMinorTickSpacing(5);
        stability.setPaintLabels(true);
        stability.setPaintTicks(true);
        stability.setValue(0);

        jLabel10.setText("stability");

        ammoCapacity.setFont(new java.awt.Font("Tahoma", 0, 7)); // NOI18N
        ammoCapacity.setMajorTickSpacing(10);
        ammoCapacity.setMinorTickSpacing(5);
        ammoCapacity.setPaintLabels(true);
        ammoCapacity.setPaintTicks(true);
        ammoCapacity.setValue(0);

        jLabel11.setText("ammoCapacity");

        magazineCapacity.setFont(new java.awt.Font("Tahoma", 0, 7)); // NOI18N
        magazineCapacity.setMajorTickSpacing(1);
        magazineCapacity.setMaximum(50);
        magazineCapacity.setMinorTickSpacing(5);
        magazineCapacity.setPaintLabels(true);
        magazineCapacity.setPaintTicks(true);
        magazineCapacity.setValue(0);

        jLabel12.setText("magazineCapacity");

        image.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/melee1.png"))); // NOI18N

        imageRarity.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        imageRarity.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/rarity1.png"))); // NOI18N

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(image)
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                    .addContainerGap(14, Short.MAX_VALUE)
                    .addComponent(imageRarity)
                    .addGap(6, 6, 6)))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(image)
                .addGap(2, 2, 2))
            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                    .addContainerGap(31, Short.MAX_VALUE)
                    .addComponent(imageRarity)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(weaponLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(OKButton)
                        .addGap(28, 28, 28)
                        .addComponent(CancelButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(selectWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dmg, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(attackspeed, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(durability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(range, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(selectRarity, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(102, 102, 102))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(23, 23, 23)
                                .addComponent(lenght, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(23, 23, 23)
                                .addComponent(accuracy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(magazineCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel11))
                                        .addGap(23, 23, 23)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ammoCapacity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(stability, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(weaponLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(selectWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(selectRarity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dmg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(attackspeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(range, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(durability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lenght, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(accuracy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(stability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(27, 27, 27)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ammoCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(magazineCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(102, 102, 102)
                                .addComponent(jLabel12)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OKButton)
                    .addComponent(CancelButton))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
        actionButton = "OK";
        this.dispose();
    }//GEN-LAST:event_OKButtonActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        actionButton = "Storno";
        this.dispose();
        
    }//GEN-LAST:event_CancelButtonActionPerformed

    private void selectWeaponComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_selectWeaponComponentAdded

    }//GEN-LAST:event_selectWeaponComponentAdded

    private void selectWeaponActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectWeaponActionPerformed
        if(Melee == true){
            if(selectWeapon.getSelectedIndex() > -1){
                int digit = selectWeapon.getSelectedIndex()+1;
                ImageIcon icon = new ImageIcon(getClass().getResource("/image/melee"+digit+".png"));
                image.setIcon(icon);
                if(selectWeapon.getSelectedItem().equals(MeleeWeapon.Type.Sword)){
                    setSlider(lenght,80,200,40);
                }
                else if(selectWeapon.getSelectedItem().equals(MeleeWeapon.Type.Axe)){
                    setSlider(lenght,50,150,50);
                }
                else if(selectWeapon.getSelectedItem().equals(MeleeWeapon.Type.Blade)){
                    setSlider(lenght,40,70,30);
                }
                else if(selectWeapon.getSelectedItem().equals(MeleeWeapon.Type.Mace)){
                    setSlider(lenght,60,120,30);
                }
                else if(selectWeapon.getSelectedItem().equals(MeleeWeapon.Type.Hammer)){
                    setSlider(lenght,20,180,40);
                }
                else if(selectWeapon.getSelectedItem().equals(MeleeWeapon.Type.Spear)){
                    setSlider(lenght,140,220,30);
                }
                else if(selectWeapon.getSelectedItem().equals(MeleeWeapon.Type.Dagger)){
                    setSlider(lenght,10,30,10);;
                }
            }
        }
        else{
            if(selectWeapon.getSelectedIndex() > -1){
                int digit = selectWeapon.getSelectedIndex()+1;
                ImageIcon icon = new ImageIcon(getClass().getResource("/image/range"+digit+".png"));
                image.setIcon(icon);
                if(selectWeapon.getSelectedItem().equals(RangeWeapon.Type.Bow)){
                    setSlider(ammoCapacity,20,60,20);
                    setSlider(magazineCapacity,1,3,1);
                }
                else if(selectWeapon.getSelectedItem().equals(RangeWeapon.Type.Crossbow)){
                    setSlider(ammoCapacity,20,60,20);
                    setSlider(magazineCapacity,5,20,5);
                }
                else if(selectWeapon.getSelectedItem().equals(RangeWeapon.Type.Pistol)){
                    setSlider(ammoCapacity,60,180,60);
                    setSlider(magazineCapacity,6,20,7);
                }
                else if(selectWeapon.getSelectedItem().equals(RangeWeapon.Type.Smg)){
                    setSlider(ammoCapacity,60,180,60);
                    setSlider(magazineCapacity,30,50,5);
                }
                else if(selectWeapon.getSelectedItem().equals(RangeWeapon.Type.Assult)){
                    setSlider(ammoCapacity,60,200,30);
                    setSlider(magazineCapacity,20,40,5);
                }
                else if(selectWeapon.getSelectedItem().equals(RangeWeapon.Type.Sniper)){
                    setSlider(ammoCapacity,10,60,10);
                    setSlider(magazineCapacity,5,10,5);
                }
                else if(selectWeapon.getSelectedItem().equals(RangeWeapon.Type.RocketLauncher)){
                    setSlider(ammoCapacity,2,10,4);
                    setSlider(magazineCapacity,1,3,1);
                }
            }
        }
    }//GEN-LAST:event_selectWeaponActionPerformed

    private void selectRarityComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_selectRarityComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_selectRarityComponentAdded

    private void selectRarityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectRarityActionPerformed
        if(selectRarity.getSelectedIndex() > -1){
            int digit = selectRarity.getSelectedIndex()+1;
            ImageIcon icon = new ImageIcon(getClass().getResource("/image/rarity"+digit+".png"));
            imageRarity.setIcon(icon);
            if(selectWeapon.getSelectedItem().equals(Weapon.Rarity.Common)){
                dmg.setValue(30);
            }
            else if(selectWeapon.getSelectedItem().equals(Weapon.Rarity.Uncommon)){
                dmg.setValue(40);
            }
            else if(selectWeapon.getSelectedItem().equals(Weapon.Rarity.Rare)){
                dmg.setValue(50);
            }
            else if(selectWeapon.getSelectedItem().equals(Weapon.Rarity.Epic)){
                dmg.setValue(60);
            }
            else if(selectWeapon.getSelectedItem().equals(Weapon.Rarity.Legendary)){
                dmg.setValue(70);
            }
        }
    }//GEN-LAST:event_selectRarityActionPerformed

    private void selectRarityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_selectRarityItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_selectRarityItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WeaponDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WeaponDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WeaponDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WeaponDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                WeaponDialog dialog = new WeaponDialog(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JButton OKButton;
    private javax.swing.JSlider accuracy;
    private javax.swing.JSlider ammoCapacity;
    private javax.swing.JSpinner attackspeed;
    private javax.swing.JSpinner dmg;
    private javax.swing.JSlider durability;
    private javax.swing.JLabel image;
    private javax.swing.JLabel imageRarity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSlider lenght;
    private javax.swing.JSlider magazineCapacity;
    private javax.swing.JTextField name;
    private javax.swing.JPanel panel;
    private javax.swing.JSlider range;
    private javax.swing.JComboBox<String> selectRarity;
    private javax.swing.JComboBox<String> selectWeapon;
    private javax.swing.JSlider stability;
    private javax.swing.JLabel weaponLabel;
    // End of variables declaration//GEN-END:variables
}
